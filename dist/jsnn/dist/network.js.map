{"version":3,"sources":["../../../jsnn/dist/network.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","NeuronType","NONE","INPUT","HIDDEN","OUTPUT","LinkType","INPUT_TO_HIDDEN","HIDDEN_TO_HIDDEN","HIDDEN_TO_OUTPUT","Neuron","type","arguments","undefined","fn","x","Math","exp","computeValue","inputValue","getValue","setValue","setError","error","getError","Link","neuronFromKey","neuronToKey","generateWeight","deltaWeight","prevDeltaWeight","weight","floor","random","setDeltaWeight","delta","getDeltaWeight","getPrevDeltaWeight","setWeight","getWeight","NN","networkConfiguration","config","B","L","networkPreInit","createReferences","trainNetwork","inputSize","layers","find","l","size","hiddenSize","outputSize","network","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","next","done","layer","createLayer","err","return","push","references","h","o","trainConfig","_this","trainInputs","randomSet","prevError","learnCycles","learnHash","rnd","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_loop","_step2","refs","filter","r","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","ref","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_loop2","_step3","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_loop3","_step6","n","_iterator6","console","log","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_loop4","_step7","hiddenNeuron","newWeight","_iterator7","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_loop5","_step4","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_iterator8","_step8","_ref","_iterator4","run","data","_this2","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_loop6","_step9","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_iterator11","_step11","_ref2","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_loop7","_step10","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_loop8","_step12","_iterator12","_iterator10","N"],"mappings":"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","file":"network.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NeuronType = exports.NeuronType = {\n    NONE: \"NONE\",\n    INPUT: \"INPUT\",\n    HIDDEN: \"HIDDEN\",\n    OUTPUT: \"OUTPUT\"\n};\n\nvar LinkType = exports.LinkType = {\n    NONE: \"NONE\",\n    INPUT_TO_HIDDEN: \"INPUT_TO_HIDDEN\",\n    HIDDEN_TO_HIDDEN: \"HIDDEN_TO_HIDDEN\",\n    HIDDEN_TO_OUTPUT: \"HIDDEN_TO_OUTPUT\"\n};\n\nvar Neuron = exports.Neuron = function () {\n    function Neuron() {\n        var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : NeuronType.NONE;\n        var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n        _classCallCheck(this, Neuron);\n\n        this.type = type;\n        this.value = 0.0;\n        this.key = key;\n    }\n\n    _createClass(Neuron, [{\n        key: \"fn\",\n        value: function fn(x) {\n            return 1.0 / (1.0 + Math.exp(-x));\n        }\n    }, {\n        key: \"computeValue\",\n        value: function computeValue(inputValue) {\n            this.value = this.fn(inputValue);\n        }\n    }, {\n        key: \"getValue\",\n        value: function getValue() {\n            return this.value;\n        }\n    }, {\n        key: \"setValue\",\n        value: function setValue(value) {\n            this.value = value;\n        }\n    }, {\n        key: \"setError\",\n        value: function setError(error) {\n            this.error = error;\n        }\n    }, {\n        key: \"getError\",\n        value: function getError() {\n            return this.error;\n        }\n    }]);\n\n    return Neuron;\n}();\n\nvar Link = exports.Link = function () {\n    function Link() {\n        var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : LinkType.NONE;\n        var neuronFromKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n        var neuronToKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n\n        _classCallCheck(this, Link);\n\n        this.type = type;\n        this.neuronFromKey = neuronFromKey;\n        this.neuronToKey = neuronToKey;\n        this.generateWeight();\n        this.deltaWeight = 0.0;\n        this.prevDeltaWeight = 0.0;\n    }\n\n    _createClass(Link, [{\n        key: \"generateWeight\",\n        value: function generateWeight() {\n            this.weight = Math.floor(Math.random() * (0.5 - 0) + 0);\n        }\n    }, {\n        key: \"setDeltaWeight\",\n        value: function setDeltaWeight(delta) {\n            this.prevDeltaWeight = this.deltaWeight;\n            this.deltaWeight = delta;\n        }\n    }, {\n        key: \"getDeltaWeight\",\n        value: function getDeltaWeight() {\n            return this.deltaWeight;\n        }\n    }, {\n        key: \"getPrevDeltaWeight\",\n        value: function getPrevDeltaWeight() {\n            return this.prevDeltaWeight;\n        }\n    }, {\n        key: \"setWeight\",\n        value: function setWeight(weight) {\n            this.weight = weight;\n        }\n    }, {\n        key: \"getWeight\",\n        value: function getWeight() {\n            return this.weight;\n        }\n    }]);\n\n    return Link;\n}();\n\nvar NN = exports.NN = function () {\n    function NN(networkConfiguration) {\n        _classCallCheck(this, NN);\n\n        this.config = networkConfiguration;\n        this.B = 0.8;\n        this.L = 0.9;\n\n        this.networkPreInit();\n        this.createReferences();\n        this.trainNetwork({});\n    }\n\n    _createClass(NN, [{\n        key: \"networkPreInit\",\n        value: function networkPreInit() {\n            this.inputSize = this.config.layers.find(function (l) {\n                return l.type === NeuronType.INPUT;\n            }).size;\n            this.hiddenSize = this.config.layers.find(function (l) {\n                return l.type === NeuronType.HIDDEN;\n            }).size;\n            this.outputSize = this.config.layers.find(function (l) {\n                return l.type === NeuronType.OUTPUT;\n            }).size;\n\n            this.network = [];\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this.config.layers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var layer = _step.value;\n\n                    this.createLayer(layer);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n    }, {\n        key: \"createLayer\",\n        value: function createLayer(layer) {\n            for (var i = 0; i < layer.size; i++) {\n                this.network.push(new Neuron(layer.type, i));\n            }\n        }\n    }, {\n        key: \"createReferences\",\n        value: function createReferences() {\n            this.references = [];\n\n            for (var h = 0; h < this.hiddenSize; h++) {\n\n                for (var i = 0; i < this.inputSize; i++) {\n                    this.references.push(new Link(LinkType.INPUT_TO_HIDDEN, i, h));\n                }for (var o = 0; o < this.outputSize; o++) {\n                    this.references.push(new Link(LinkType.HIDDEN_TO_OUTPUT, h, o));\n                }\n            }\n        }\n    }, {\n        key: \"trainNetwork\",\n        value: function trainNetwork(trainConfig) {\n            var _this = this;\n\n            this.network = [];\n            this.references = [];\n\n            this.network.push(new Neuron(NeuronType.INPUT, 0));\n            this.network.push(new Neuron(NeuronType.INPUT, 1));\n\n            this.network.push(new Neuron(NeuronType.OUTPUT, 0));\n\n            this.network.push(new Neuron(NeuronType.HIDDEN, 0));\n            this.network.push(new Neuron(NeuronType.HIDDEN, 1));\n\n            this.references.push(new Link(LinkType.INPUT_TO_HIDDEN, 0, 0));\n            this.references.push(new Link(LinkType.INPUT_TO_HIDDEN, 1, 0));\n\n            this.references.push(new Link(LinkType.INPUT_TO_HIDDEN, 0, 1));\n            this.references.push(new Link(LinkType.INPUT_TO_HIDDEN, 1, 1));\n\n            this.references.push(new Link(LinkType.HIDDEN_TO_OUTPUT, 0, 0));\n            this.references.push(new Link(LinkType.HIDDEN_TO_OUTPUT, 1, 0));\n\n            var trainInputs = [[1, 1, 1], [0, 0, 0], [1, 0, 0], [0, 1, 0]];\n\n            var randomSet = -1;\n\n            this.prevError = 2;\n            this.error = 1;\n\n            this.learnCycles = 0;\n            this.learnHash = { 0: 0, 1: 0, 2: 0, 3: 0 };\n\n            while (this.learnCycles < 2000) {\n\n                this.learnCycles++;\n                for (var rnd = 0; rnd < trainInputs.length; rnd++) {\n                    randomSet = rnd;\n                    this.learnHash[randomSet]++;\n\n                    this.prevError = this.error;\n\n                    var _iteratorNormalCompletion2 = true;\n                    var _didIteratorError2 = false;\n                    var _iteratorError2 = undefined;\n\n                    try {\n                        var _loop = function _loop() {\n                            var h = _step2.value;\n\n                            var refs = _this.references.filter(function (r) {\n                                return r.type === LinkType.INPUT_TO_HIDDEN && r.neuronToKey === h.key;\n                            });\n                            var value = 0;\n                            var _iteratorNormalCompletion5 = true;\n                            var _didIteratorError5 = false;\n                            var _iteratorError5 = undefined;\n\n                            try {\n                                for (var _iterator5 = refs[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                                    var ref = _step5.value;\n\n                                    value += ref.weight * trainInputs[randomSet][ref.neuronFromKey];\n                                }\n                            } catch (err) {\n                                _didIteratorError5 = true;\n                                _iteratorError5 = err;\n                            } finally {\n                                try {\n                                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                                        _iterator5.return();\n                                    }\n                                } finally {\n                                    if (_didIteratorError5) {\n                                        throw _iteratorError5;\n                                    }\n                                }\n                            }\n\n                            h.computeValue(value);\n                        };\n\n                        for (var _iterator2 = this.network.filter(function (h) {\n                            return h.type === NeuronType.HIDDEN;\n                        })[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                            _loop();\n                        }\n                    } catch (err) {\n                        _didIteratorError2 = true;\n                        _iteratorError2 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                                _iterator2.return();\n                            }\n                        } finally {\n                            if (_didIteratorError2) {\n                                throw _iteratorError2;\n                            }\n                        }\n                    }\n\n                    var _iteratorNormalCompletion3 = true;\n                    var _didIteratorError3 = false;\n                    var _iteratorError3 = undefined;\n\n                    try {\n                        var _loop2 = function _loop2() {\n                            var o = _step3.value;\n\n                            var refs = _this.references.filter(function (r) {\n                                return r.type === LinkType.HIDDEN_TO_OUTPUT && r.neuronToKey === o.key;\n                            });\n                            var value = 0;\n                            var _iteratorNormalCompletion6 = true;\n                            var _didIteratorError6 = false;\n                            var _iteratorError6 = undefined;\n\n                            try {\n                                var _loop3 = function _loop3() {\n                                    var ref = _step6.value;\n\n                                    value += ref.weight * _this.network.find(function (n) {\n                                        return n.type === NeuronType.HIDDEN && n.key === ref.neuronFromKey;\n                                    }).value;\n                                };\n\n                                for (var _iterator6 = refs[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                                    _loop3();\n                                }\n                            } catch (err) {\n                                _didIteratorError6 = true;\n                                _iteratorError6 = err;\n                            } finally {\n                                try {\n                                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                                        _iterator6.return();\n                                    }\n                                } finally {\n                                    if (_didIteratorError6) {\n                                        throw _iteratorError6;\n                                    }\n                                }\n                            }\n\n                            o.computeValue(value);\n\n                            if (_this.learnCycles > 1800) console.log(o.getValue());\n\n                            _this.error = o.getValue() * (1 - o.getValue()) * (trainInputs[randomSet][2] - o.getValue());\n\n                            var _iteratorNormalCompletion7 = true;\n                            var _didIteratorError7 = false;\n                            var _iteratorError7 = undefined;\n\n                            try {\n                                var _loop4 = function _loop4() {\n                                    var ref = _step7.value;\n\n                                    var hiddenNeuron = _this.network.find(function (n) {\n                                        return n.type === NeuronType.HIDDEN && n.key === ref.neuronFromKey;\n                                    });\n                                    ref.setDeltaWeight(_this.B * _this.error * hiddenNeuron.value);\n                                    var newWeight = ref.getWeight() + ref.getDeltaWeight() + _this.L * ref.getPrevDeltaWeight();\n                                    ref.setWeight(newWeight);\n\n                                    hiddenNeuron.setError(_this.error * newWeight);\n                                };\n\n                                for (var _iterator7 = refs[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                                    _loop4();\n                                }\n                            } catch (err) {\n                                _didIteratorError7 = true;\n                                _iteratorError7 = err;\n                            } finally {\n                                try {\n                                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                                        _iterator7.return();\n                                    }\n                                } finally {\n                                    if (_didIteratorError7) {\n                                        throw _iteratorError7;\n                                    }\n                                }\n                            }\n                        };\n\n                        for (var _iterator3 = this.network.filter(function (o) {\n                            return o.type === NeuronType.OUTPUT;\n                        })[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                            _loop2();\n                        }\n                    } catch (err) {\n                        _didIteratorError3 = true;\n                        _iteratorError3 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                                _iterator3.return();\n                            }\n                        } finally {\n                            if (_didIteratorError3) {\n                                throw _iteratorError3;\n                            }\n                        }\n                    }\n\n                    var _iteratorNormalCompletion4 = true;\n                    var _didIteratorError4 = false;\n                    var _iteratorError4 = undefined;\n\n                    try {\n                        var _loop5 = function _loop5() {\n                            var h = _step4.value;\n\n                            var refs = _this.references.filter(function (r) {\n                                return r.type === LinkType.INPUT_TO_HIDDEN && r.neuronToKey === h.key;\n                            });\n                            var _iteratorNormalCompletion8 = true;\n                            var _didIteratorError8 = false;\n                            var _iteratorError8 = undefined;\n\n                            try {\n                                for (var _iterator8 = refs[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n                                    var _ref = _step8.value;\n\n                                    // let inputNeuron = this.network.find(n => n.type === NeuronType.INPUT && n.key === ref.neuronFromKey);\n                                    // ref.setDeltaWeight(this.B * h.getError() * inputNeuron.getValue());\n                                    _ref.setDeltaWeight(_this.B * h.getError() * trainInputs[randomSet][_ref.neuronFromKey]);\n                                    var newWeight = _ref.getWeight() + _ref.getDeltaWeight() + _this.L * _ref.getPrevDeltaWeight();;\n                                    _ref.setWeight(newWeight);\n                                }\n                            } catch (err) {\n                                _didIteratorError8 = true;\n                                _iteratorError8 = err;\n                            } finally {\n                                try {\n                                    if (!_iteratorNormalCompletion8 && _iterator8.return) {\n                                        _iterator8.return();\n                                    }\n                                } finally {\n                                    if (_didIteratorError8) {\n                                        throw _iteratorError8;\n                                    }\n                                }\n                            }\n                        };\n\n                        for (var _iterator4 = this.network.filter(function (h) {\n                            return h.type === NeuronType.HIDDEN;\n                        })[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                            _loop5();\n                        }\n                    } catch (err) {\n                        _didIteratorError4 = true;\n                        _iteratorError4 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                                _iterator4.return();\n                            }\n                        } finally {\n                            if (_didIteratorError4) {\n                                throw _iteratorError4;\n                            }\n                        }\n                    }\n                }\n            }\n            // this.run([1, 1]);\n            // this.run([0, 1]);\n            // this.run([1, 0]);\n            // this.run([0, 0]);\n\n            // console.log('LH ', this.learnHash);\n        }\n    }, {\n        key: \"run\",\n        value: function run(data) {\n            var _this2 = this;\n\n            var _iteratorNormalCompletion9 = true;\n            var _didIteratorError9 = false;\n            var _iteratorError9 = undefined;\n\n            try {\n                var _loop6 = function _loop6() {\n                    var h = _step9.value;\n\n                    var refs = _this2.references.filter(function (r) {\n                        return r.type === LinkType.INPUT_TO_HIDDEN && r.neuronToKey === h.key;\n                    });\n                    var value = 0;\n                    var _iteratorNormalCompletion11 = true;\n                    var _didIteratorError11 = false;\n                    var _iteratorError11 = undefined;\n\n                    try {\n                        for (var _iterator11 = refs[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n                            var _ref2 = _step11.value;\n\n                            // value += ref.weight * this.network.find(n => n.type === NeuronType.INPUT && n.key === ref.neuronFromKey).value;\n                            value += _ref2.weight * data[_ref2.neuronFromKey];\n                        }\n                    } catch (err) {\n                        _didIteratorError11 = true;\n                        _iteratorError11 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion11 && _iterator11.return) {\n                                _iterator11.return();\n                            }\n                        } finally {\n                            if (_didIteratorError11) {\n                                throw _iteratorError11;\n                            }\n                        }\n                    }\n\n                    h.computeValue(value);\n                };\n\n                for (var _iterator9 = this.network.filter(function (h) {\n                    return h.type === NeuronType.HIDDEN;\n                })[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n                    _loop6();\n                }\n            } catch (err) {\n                _didIteratorError9 = true;\n                _iteratorError9 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion9 && _iterator9.return) {\n                        _iterator9.return();\n                    }\n                } finally {\n                    if (_didIteratorError9) {\n                        throw _iteratorError9;\n                    }\n                }\n            }\n\n            var _iteratorNormalCompletion10 = true;\n            var _didIteratorError10 = false;\n            var _iteratorError10 = undefined;\n\n            try {\n                var _loop7 = function _loop7() {\n                    var o = _step10.value;\n\n                    var refs = _this2.references.filter(function (r) {\n                        return r.type === LinkType.HIDDEN_TO_OUTPUT && r.neuronToKey === o.key;\n                    });\n                    var value = 0;\n                    var _iteratorNormalCompletion12 = true;\n                    var _didIteratorError12 = false;\n                    var _iteratorError12 = undefined;\n\n                    try {\n                        var _loop8 = function _loop8() {\n                            var ref = _step12.value;\n\n                            value += ref.weight * _this2.network.find(function (n) {\n                                return n.type === NeuronType.HIDDEN && n.key === ref.neuronFromKey;\n                            }).value;\n                        };\n\n                        for (var _iterator12 = refs[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n                            _loop8();\n                        }\n                    } catch (err) {\n                        _didIteratorError12 = true;\n                        _iteratorError12 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion12 && _iterator12.return) {\n                                _iterator12.return();\n                            }\n                        } finally {\n                            if (_didIteratorError12) {\n                                throw _iteratorError12;\n                            }\n                        }\n                    }\n\n                    o.computeValue(value);\n                    console.log(\"RUN RESULT \" + data[0] + \" & \" + data[1] + \" ->  \" + o.getValue());\n                };\n\n                for (var _iterator10 = this.network.filter(function (o) {\n                    return o.type === NeuronType.OUTPUT;\n                })[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n                    _loop7();\n                }\n            } catch (err) {\n                _didIteratorError10 = true;\n                _iteratorError10 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion10 && _iterator10.return) {\n                        _iterator10.return();\n                    }\n                } finally {\n                    if (_didIteratorError10) {\n                        throw _iteratorError10;\n                    }\n                }\n            }\n        }\n    }]);\n\n    return NN;\n}();\n\nvar N = new NN({\n    layers: [{\n        type: NeuronType.INPUT,\n        size: 2\n    }, {\n        type: NeuronType.HIDDEN,\n        size: 3\n    }, {\n        type: NeuronType.OUTPUT,\n        size: 1\n    }]\n});"]}