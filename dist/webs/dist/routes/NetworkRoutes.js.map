{"version":3,"sources":["../../../../webs/dist/routes/NetworkRoutes.js"],"names":["Object","defineProperty","exports","value","TrainNetwork","PostImageData","undefined","_nn","require","N","NN","cycles","layers","type","NeuronType","INPUT","size","HIDDEN","OUTPUT","numConverter","trainNetwork","console","log","trainSet","config","cors","origin","additionalHeaders","method","path","handler","req","reply","k","payload","run","output","set","JSON","parse"],"mappings":"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","file":"NetworkRoutes.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TrainNetwork = exports.PostImageData = undefined;\n\nvar _nn = require('./nn');\n\n// const NM = new NetworkManager();\n\n// export let CreateNetworkRoute = {\n//     method: 'POST',\n//     path: '/network/create',\n//     handler: (req, reply) => {\n//         NM.createNetwork(req.payload, (response) => {\n//             return reply(response);\n//         });\n//         return reply({ success: false });\n//     }\n// };\n\n\nvar N = new _nn.NN({\n    cycles: 10000,\n    layers: [{\n        type: _nn.NeuronType.INPUT,\n        size: 15\n    }, {\n        type: _nn.NeuronType.HIDDEN,\n        size: 15\n    }, {\n        type: _nn.NeuronType.OUTPUT,\n        size: 10\n    }]\n});\n\n//N.deserializeFromFile(\"d://network.txt\");\n\n// import { NetworkManager } from '../db/managers/NetworkManager'\nvar numConverter = [\n//[1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n// [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n[0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1]];\n\nN.trainNetwork([\n//[128, 122, 122, 157, 0, 173, 255, 0, 235, 1, 0, 0, 0, 95, 0],// 0\n// [0, 179, 200, 101, 0, 204, 0, 0, 54, 0, 0, 51, 0, 0, 33], //1\n[1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], //2\n[1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1], //3\n[1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], // 4\n[1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], // 5\n[1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], //6\n[1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], // 7\n[1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], // 8\n[1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1] // 9\n], numConverter, function () {\n    console.log('TRAIN SUCCESS');\n    //  N.serializeToFile();\n    /* N.run([0, 179, 200, 101, 0, 204, 0, 0, 54, 0, 0, 51, 0, 0, 33], function (output) {\r\n         console.log('OOOO ', output);\r\n     });*/\n});\n\nvar trainSet = [];\n\nvar PostImageData = exports.PostImageData = {\n    config: {\n        cors: {\n            origin: ['*'],\n            additionalHeaders: ['cache-control', 'x-requested-with']\n        }\n    },\n    method: 'POST',\n    path: '/network/games/image',\n    handler: function handler(req, reply) {\n        for (var k in req.payload) {\n            N.run(req.payload[k], function (output) {\n                return reply(output);\n            });\n        }\n    }\n};\n\nvar TrainNetwork = exports.TrainNetwork = {\n    config: {\n        cors: {\n            origin: ['*'],\n            additionalHeaders: ['cache-control', 'x-requested-with']\n        }\n        /*         payload: {\r\n                    output: 'data',\r\n                    parse: true,\r\n                    allow: 'application/json'\r\n                 }*/\n    },\n    method: 'POST',\n    path: '/network/games/train',\n    handler: function handler(req, reply) {\n        trainSet = req.payload.set;\n        console.log('train payload');\n\n        N.trainNetwork(JSON.parse(trainSet), numConverter, function () {\n            console.log('TRAIN SUCCESS');\n            //  N.serializeToFile();\n            /* N.run([0, 179, 200, 101, 0, 204, 0, 0, 54, 0, 0, 51, 0, 0, 33], function (output) {\r\n                 console.log('OOOO ', output);\r\n             });*/\n        });\n\n        reply();\n    }\n};"]}